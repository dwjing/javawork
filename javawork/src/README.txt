
回顾:
Java - Java 牌咖啡 - 程序语言
1994 - James Gosling - Internet

Java SE - 标准版本,常用开发
Java EE - 企业级开发
Java ME - 嵌入式开发

jre - 运行环境
jdk - 开发+运行环境

         编译            运行                Linux
源码 .java - 字节码 .class - JVM(Java虚拟机) - Windows
                                            Mac

Java:
1.跨平台(JVM)
2.垃圾回收机制

使用记事本开发Java程序:
1.打开记事本,写一个 Java 程序,保存
2.javac Xxx.java - 编译
3.java Xxx       - 运行

使用STS 开发Java程序:
1.打开STS - New - Java Project(工程/项目)
2.右击 src - New - Class (输入包名+类名)
3.执行按钮 | 右击空白处 - Run As - Java Application

命名规范:
类: 驼峰式命名 Hello HelloWorld HelloWorldJava 建议使用名词
变量: 首字母:字母 _ $ 开头,数字 字母 _ $         建议使用名词
方法: 建议使用动词


数据类型:
原始数据类型:
  数值型:
    整型:  byte short int long
          8     16    32  64  - 位
          1     2     4   8   - 字节

    非整型:float double
          32    64     - 位
  非数值型:boolean char
          1       16   - 位
                  2个字节;一个汉字两个字节 char c = '中';
                         一个英文字母一个字节 char c = 'A';
                         A - ascii码:65
                         a -         97

引用数据类型:
  数组
  对象:
    类
    接口
-------------------------------------------------
房间类型 房间号  = 房客;
单人间   666   =  段誉;

数据类型 变量    = 值;
int     score = 90;

数据类型的转换:
1.自动转换 小类型转大类型 (隐式转换)
  int i = 10;
  long l = i;
2.强制转换 大类型转小类型 (显式转换)
  int i = 10;
  char c = (char)i;

变量的赋值:
1.声明变量,赋初始值
  int age = 20;

2.声明变量,然后赋值
  int age;  // 默认值是 0
  age = 20;

运算符:
算术运算符: - ++自增 --自减 + - * / %取模
                                 刚好整除:0 不能整除:余数
关系运算符: == != > >= < <= 结果: true false
逻辑运算符: !逻辑非not  &逻辑与and  |逻辑或or  &&短路与 ||短路或

&& 短路与:如左操作数为false,则不运算右操作数(只要一个为false则整个都是false)
|| 短路或:如左操作数为true,则不运算右操作数(只要一个为true则整个都是true)

赋值运算符的运算顺序是从右至左:
= += -= *= /= %=
= 赋值,将右侧的值赋给左侧的变量

int i = 20; // 赋值
++i; // 自增

int i = 20;
i += 1; // i = i + 1; // 先加然后赋值

int i = 20;
i++;  // 先输出然后 +1

if()
if() .. else ..
if() .. else if() .. else ..
三元表达式

优先级
括号 > 一元运算符 > 算术运算符 > 关系运算符 > 逻辑运算符 > 条件运算符 > 赋值运算符

int i = (2 == 2) ? 3 : 4;  // 结果: i = 3;
替换以下代码:
int i = 0;
或者 int i;
if(2 == 2)
  i = 3;
else
  i = 4;


int a = 2;
int i = (a++ == 2) ? 3 : 4; // 结果: 3
int i = (++a == 2) ? 3 : 4; // 结果: 4



1、判断输入的年份是否是闰年
   从控制台上随便输入一个年份，判断该年是否
是闰年并输出相应的信息。判断闰年的条件是：
能被400整除或能被4整除但不能被100整除的数
即为闰年。
if(i%400==0 || (i%4==0&&i%100!=0))


2、在学校的时候，老师会根据学生的成绩和素质
分为5个等级，分别是优秀、良好、良、及格和
不及格。等级划分的准则如下：
请根据用户输入的数据判断：
1）、综合分数如果大于90并且小于100则是优秀。
     在屏幕上打印:一个优秀的分数,你好棒啊.

2）、综合分数如果大于80并且小于90则是良好。
     在屏幕上打印:一个评为良好的分数,加油啊.

3）、综合分数如果大于70并且小于80则是良。
     在屏幕上打印:一个评为良的分数，再加把劲。

4）、综合分数如果大于60并且小于70则是及格。
     在屏幕上打印:一个刚刚及格的分数，还需努力。

5）、综合分数如果小于60则是不及格。
     在屏幕上打印:这真是一个杯具。



-----------------------------
作用域 {}
public class A {
  int a;

  public void a(int z){
    int b = 0;
    a += b;
  }

  public void b(){
    int c = 10;
    a += c;

    if(1==2){
      int d = 20;
      c += d;
    }
  }

}

变量的三种方式:
类变量(成员变量) - 类作用域有效,可赋初始值,也可不赋值(jvm自动赋默认值)
参数变量        - 作为方法的参数,方法作用域有效
局部变量        - 方法作用有效,最好设置初始化值

switch..case..

rank 数据类型: byte short int char String enum
switch (rank)

switch和多重if结构:
相同点:都可以实现多分支结构
不同点:
switch:只能处理等值的条件判断，且条件是整型变量或字符变量的等值判断
多重if:处理在else部分还包含其它if结构，特别适合某个变量处于某个区间时的情况


循环语句:
while
do..while
for


1、使用For循环以阶梯形式实现九九乘法表

2、图形
使用Java For循环实现以下图形：
根据用户输入的行数
a）、在屏幕上打印出一个，靠右的直角三角形。
b）、在屏幕上打印出一个等腰三角形

3、求任意一个正数的阶乘
   例如6！ = 6*5*4*3*2*1

4、求任意一个数的n次方

5、使用While循环判断：存上100元需要多少天？
   小明是某幼稚园的小朋友，妈妈每天给他5元钱，
   而他每次都会从中拿出2.5元存入储蓄罐，他的
   目标是存上100元，用来买自己喜欢的电动玩具
   ，但是他每隔5天，就会从罐中取出6元，如果
   一直持续这样的规律，小明要多少天才可以买到
   他喜欢的电动玩具呢？



6、使用While循环，输出100之间的所有偶数。
   请注意屏幕截图中，数字的排列规则。